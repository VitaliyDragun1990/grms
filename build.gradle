/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "io.franzbecker.gradle-lombok" version "3.2.0"
    id "org.gretty" version "3.0.1"
}

allprojects {
    group = 'com.revenat'
    version = '2.0.0'

    ext {
        // misc
        commonsLang3Version = '3.9'
        jaxbVersion = '2.3.2'
        jakartaInjectVersion = '2.6.1'
        jakartaAnnotationsVersion = '1.3.5'
        javassistVersion = '3.26.0-GA'
        reflectionsVersion = '0.9.12'
        hibernateValidatorVersion = '6.0.18.Final'
        validationApiVersion = '2.0.1.Final'
        elVersion = '3.0.1-b09'
        lombokVersion = '1.18.10'
        guavaVersion = '20.0'
        jakartaCdiVersion = '2.0.2'
        jmhVersion = '1.23'
        classgraphVersion = '4.8.60'
        jacksonVersion = '2.10.1'
        gsonVersion = '2.8.6'

        // log
        log4jVersion = '2.13.0'
        commonsLoggingVersion = '1.2'
        logstashGelfVersion = '1.14.0'

        // persistence
        hibernateVersion = '5.4.12.Final'
        jpaApiVersion = '2.2'
        hibernateToolsVersion = '5.4.11.Final'
        h2Version = '1.4.200'
        sqLiteVersion = '3.30.1'
        mysqlVersion = '5.1.47'

        // server
        jerseyVersion = '2.29.1'
        swaggerVersion = '1.6.0'
        servletVersion = '4.0.1'
        weldVersion = '3.1.3.Final'

        // test
        junitVersion = '5.5.1'
        hamcrestVersion = '2.1'
        mockitoVersion = '3.0.0'
        jerseyJunitVersion = '2.1.0'
        cdiUnitVersion = '4.1.0'
        junitPioneerVersion = '0.5.3'
        wireMockVersion = '2.26.0'

        // UI
        primefacesVersion = '6.2'
        jsfVersion = '2.3.9'
        bootstrapVersion = '1.0.10'

        // security
        shiroVersion = '1.4.2'

        // metrics
        dropwizardVersion = '4.1.2'

        misc = [
                commonsLang3: "org.apache.commons:commons-lang3:$commonsLang3Version",
                jakartaInject: "org.glassfish.hk2.external:jakarta.inject:$jakartaInjectVersion",
                jakartaAnnotations : "jakarta.annotation:jakarta.annotation-api:$jakartaAnnotationsVersion",
                jaxbRuntime  : "org.glassfish.jaxb:jaxb-runtime:$jaxbVersion",
                javassist: "org.javassist:javassist:$javassistVersion",
                reflections : "org.reflections:reflections:$reflectionsVersion",
                hibernateValidator : "org.hibernate.validator:hibernate-validator:$hibernateValidatorVersion",
                validationApi : "javax.validation:validation-api:$validationApiVersion",
                el : "org.glassfish:javax.el:$elVersion",
                lombok : "org.projectlombok:lombok:$lombokVersion",
                guava : "com.google.guava:guava:$guavaVersion",
                jakartaCdi : "jakarta.enterprise:jakarta.enterprise.cdi-api:$jakartaCdiVersion",
                jmhCore : "org.openjdk.jmh:jmh-core:$jmhVersion",
                jmhGenerator : "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion",
                classgraph : "io.github.classgraph:classgraph:$classgraphVersion",
                jacksonDatatype : "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion",
                jacksonDatatypeJdk8 : "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion",
                jacksonParamNames : "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion",
                gson : "com.google.code.gson:gson:$gsonVersion"
        ]

        server = [
                jerseyServlet: "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion",
                jerseyHk2    : "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion",
                jerseyJson   : "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion",
                jerseySse : "org.glassfish.jersey.media:jersey-media-sse:$jerseyVersion",
                jerseyValidation : "org.glassfish.jersey.ext:jersey-bean-validation:$jerseyVersion",
                swagger : "io.swagger:swagger-jersey2-jaxrs:$swaggerVersion",
                servletApi : "javax.servlet:javax.servlet-api:$servletVersion",
                weldServlet : "org.jboss.weld.servlet:weld-servlet-core:$weldVersion",
                weldSe : "org.jboss.weld.se:weld-se-core:$weldVersion"
        ]

        persistence = [
                hibernateCore: "org.hibernate:hibernate-core:$hibernateVersion",
                jpaApi: "javax.persistence:javax.persistence-api:$jpaApiVersion",
                hibernateTools: "org.hibernate:hibernate-tools:$hibernateToolsVersion",
                h2: "com.h2database:h2:$h2Version",
                sqLite : "org.xerial:sqlite-jdbc:$sqLiteVersion",
                c3p0: "org.hibernate:hibernate-c3p0:$hibernateVersion",
                mysql : "mysql:mysql-connector-java:$mysqlVersion",
                hikariCp: "org.hibernate:hibernate-hikaricp:$hibernateVersion"
        ]

        log = [
                log4jApi  : "org.apache.logging.log4j:log4j-api:$log4jVersion",
                log4jCore : "org.apache.logging.log4j:log4j-core:$log4jVersion",
                log4jSlf4j: "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion",
                log4jWeb  : "org.apache.logging.log4j:log4j-web:$log4jVersion",
                commonsLogging : "commons-logging:commons-logging:$commonsLoggingVersion",
                logstashGelf : "biz.paluch.logging:logstash-gelf:$logstashGelfVersion"
        ]

        ui = [
                primefaces : "org.primefaces:primefaces:$primefacesVersion",
                jsf : "org.glassfish:javax.faces:$jsfVersion",
                bootstrap : "org.primefaces.themes:bootstrap:$bootstrapVersion"
        ]

        tests = [
                junitApi          : "org.junit.jupiter:junit-jupiter-api:$junitVersion",
                junitEngine       : "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
                junitParams       : "org.junit.jupiter:junit-jupiter-params:$junitVersion",
                junitVintage : "org.junit.vintage:junit-vintage-engine:$junitVersion",
                hamcrest          : "org.hamcrest:hamcrest:$hamcrestVersion",
                mockito           : "org.mockito:mockito-junit-jupiter:$mockitoVersion",
                jerseyTestCore    : "org.glassfish.jersey.test-framework:jersey-test-framework-core:$jerseyVersion",
                jerseyTestProvider: "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:$jerseyVersion",
                jerseyHttp   : "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVersion",
                jerseyJunit       : "com.github.hanleyt:jersey-junit:$jerseyJunitVersion",
                cdiUnit : "org.jglue.cdi-unit:cdi-unit:$cdiUnitVersion",
                junitPioneer : "org.junit-pioneer:junit-pioneer:$junitPioneerVersion",
                wireMock : "com.github.tomakehurst:wiremock-jre8:$wireMockVersion"
        ]

        security = [
                shiroCore : "org.apache.shiro:shiro-core:$shiroVersion",
                shiroWeb : "org.apache.shiro:shiro-web:$shiroVersion"
        ]

        metrics = [
                dropwizardCore : "io.dropwizard.metrics:metrics-core:$dropwizardVersion",
                dropwizardJvm : "io.dropwizard.metrics:metrics-jvm:$dropwizardVersion",
                dropwizardServlets : "io.dropwizard.metrics:metrics-servlets:$dropwizardVersion",
                dropwizardHealthchecks : "io.dropwizard.metrics:metrics-healthchecks:$dropwizardVersion",
                dropwizardGraphite : "io.dropwizard.metrics:metrics-graphite:$dropwizardVersion"
        ]
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    task allDeps(type: DependencyReportTask) {}
    task allDepsInside(type: DependencyInsightReportTask) {}

    repositories {
        mavenLocal()
        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }

    dependencyManagement {
        dependencies {
            dependency 'org.javassist:javassist:3.23.1-GA'
        }
    }

    dependencies {
        implementation log.log4jApi, log.log4jCore, log.log4jSlf4j
        compileOnly misc.lombok
        runtimeOnly log.logstashGelf

        testImplementation tests.junitApi, tests.hamcrest, tests.mockito
        testRuntimeOnly persistence.hikariCp, tests.junitEngine, persistence.h2
        testCompileOnly tests.junitParams
    }

    test {
        useJUnitPlatform()
    }

    sourceCompatibility = '1.11'

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

tasks.register("downloadDependencies") {
    doFirst {
        ["germes-presentation-web", "germes-presentation-admin"].each { name ->
            project(":$name").buildscript.configurations.each { configuration ->
                resolveConfiguration(configuration)
            }
            project(":$name").configurations.each { configuration ->
                resolveConfiguration(configuration)
            }
        }
    }
}

static boolean resolveConfiguration(configuration) {
    if (configuration.isCanBeResolved()) {
        configuration.resolve()
    }
}

static def isWildFlyDependency(File file) {
    return ["jboss", "weld", "cdi", "javax.faces", "validation-api", "javax.el"].findIndexOf { file.getName().contains(it) } >= 0
}
