# Start container using docker-compose.yml in foreground mode
# docker-compose [-f docker-compose-filename] up

# Start container using docker-compose.yml in foreground mode, rebuild any existing images
# docker-compose [-f docker-compose-filename] up --build

# Start container using docker-compose.yml in detached mode
# docker-compose [-f docker-compose-filename] up -d

# Stop all containers started via docker-compose and delete them
# docker-compose [-f docker-compose-filename] down

# Output log content of all running containers
# docker-compose [-f docker-compose-filename] logs [service]

# Restart specified service/container
# docker-compose [-f docker-compose-filename] restart <service name>

# FOR DEPLOYING WAR ARCHIVES ALREADY BUILT ON GRADLE/MAVEN DOCKER CONTAINER
version: '3.7'
# Services definition
services:
  # Germes mysql database server
  mysql:
    build:
      context: germes-presentation-admin
      dockerfile: src/main/resources/docker/mysql.dockerfile
      #logging:
      # driver: none
    networks:
      - network1
    ports:
      - "3307:3306"
    environment:
      - MYSQL_USER=germes
      - MYSQL_PASSWORD=germes
      - MYSQL_DATABASE=germes
    env_file:
      - mysql.env
    command: ['--collation-server=utf8mb4_unicode_ci', '--character-set-server=utf8mb4']
    volumes:
      - germes-mysql-data:/var/lib/mysql
  # Germes admin application
  admin:
    build:
      context: .
      dockerfile: germes-presentation-web/src/main/resources/docker/jetty-maven.dockerfile
      args:
        - war_path=/opt/admin.war
    ports:
      - "9000:8080"
    networks:
      - network1
    depends_on:
      - mysql
    entrypoint: bash -c "sleep 5s && java -jar /usr/local/jetty/start.jar"
    #environment:
    #- JAVA_OPTS=--add-modules javax.xml.bind
  # Germes client application
  client:
    build:
      context: .
      dockerfile: germes-presentation-web/src/main/resources/docker/jetty-maven.dockerfile
      args:
        - war_path=/opt/client.war
    ports:
      - "8080:8080"
    networks:
      - network1
    depends_on:
      - mysql
    entrypoint: bash -c "sleep 5s && java -jar /usr/local/jetty/start.jar"
    #environment:
    #- JAVA_OPTS=--add-modules javax.xml.bind
# Networks definition
networks:
  network1:
    driver: bridge
# Volumes definition
volumes:
  germes-mysql-data: