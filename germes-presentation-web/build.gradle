plugins {
    id 'war'
    id "org.gretty"
    id "com.moowork.node" version "1.3.1"
}

apply plugin: "com.moowork.node"

dependencies {
    implementation project(':germes-presentation-rest')

    runtimeOnly persistence.mysql, persistence.hikariCp
}

gretty {
    servletContainer = 'jetty9.4'
    contextPath = '/'
    httpPort = 8080
}

node {
    nodeModulesDir = file("client")
}

tasks.register("createNodeModulesDir") {
    doFirst { mkdir node.nodeModulesDir }
}

yarn_install.mustRunAfter createNodeModulesDir

tasks.register("cleanAngular", Delete) {
    doFirst { delete "${projectDir}/client/dist" }
}

tasks.register("testAngular", CacheableYarnTask) {
    args = ['run', 'testExit']
}

tasks.register("buildAngular", CacheableYarnTask) {
    dependsOn tasks.named("yarn_install")
    args = ['run', "build"]
}

clean.dependsOn tasks.named("cleanAngular")
test.dependsOn tasks.named("testAngular")
assemble.dependsOn tasks.named("buildAngular")

war {
    archiveName 'client.war'
    from !project.hasProperty('angularDir') ? 'client/dist' : project.property('angularDir').toString()
    classpath = classpath.filter {!project.hasProperty('payara') || !it.name.contains('jersey')}
    classpath = classpath.filter {!it.name.contains('jmh-')}
}

import com.moowork.gradle.node.yarn.YarnTask

@CacheableTask
class CacheableYarnTask extends YarnTask {

    @InputFiles
    FileCollection sourceFiles = project.files('client/src', 'client/package.json', 'client/.angular-cli.json')

    @OutputDirectory
    File outputDir = project.file("client/dist");
}